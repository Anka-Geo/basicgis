!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.AnkaDraw=e():t.AnkaDraw=e()}(window,(function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=10)}({10:function(t,e,i){"use strict";function n(t){this.baseDoom=t}function a(t){this.type="Tool",AnkaPanAPI.Base.apply(this,arguments),this.onMouseDownForMiddleClick=this.onMouseDownForMiddleClick.bind(this),this.baseObject=t}i.r(e),i.d(e,"Magnifier",(function(){return n})),i.d(e,"DrawPlugin",(function(){return D})),n.sizeX=27,n.sizeY=27,n.prototype={constructor:n,show:function(){if(!this.canvas){this.canvas=document.createElement("canvas"),this.canvas.id="mag_"+Math.floor(999999*Math.random()),this.context=this.canvas.getContext("2d");var t=this.canvas.style;t.position="absolute",t.zIndex="999999",t.backgroundColor="#ccc",t.border="solid 1px white",t.top="0px",t.left="0px",t.pointerEvents="none",t.webkitTransform="scaleY(-1)",t.MozTransform="scaleY(-1)",t.msTransform="scaleY(-1)",t.transform="scaleY(-1)",t.OTransform="scaleY(-1)",this.crosshair=new window.Image,this.crosshair.src="img/crosshair.png",this.baseDoom.appendChild(this.canvas)}this.visible=!0,this.canvas.style.visibility="visible"},dispose:function(){if(this.canvas){var t=this.canvas.parentElement;t&&t.removeChild(this.canvas),this.imageData&&(this.imageData=null),this.canvas=null,this.context=null}},hide:function(){this.canvas&&(this.canvas.style.visibility="hidden"),this.visible=!1},createImageData:function(t,e){return this.context?(this.imageData=null,this.width=t,this.height=e,this.imageData=this.context.createImageData(t,e),this.imageData):null},renderImage:function(t,e,i){this.imageData||this.createImageData(n.sizeX,n.sizeY);var a=this.imageData,o=this.width,s=this.height,r=t.getRenderer().context,l=new Uint8Array(o*s*4);r.readPixels(e-o/2,t.contentDV.clientHeight-i-s/2,o,s,r.RGBA,r.UNSIGNED_BYTE,l);for(var h=0;h<l.length;h+=4)a.data[h]=l[h],a.data[h+1]=l[h+1],a.data[h+2]=l[h+2],a.data[h+3]=l[h+3];this.render(a,o,s,e,i)},render:function(t,e,i,n,a){if(this.canvas){this.canvas.width=e,this.canvas.height=i;var o=this.context;o.imageSmoothingEnabled=!1,o.clearRect(0,0,this.canvas.clientWidth,this.canvas.clientHeight),o.putImageData(t,0,0);var s=this.crosshair;o.drawImage(s,(e-s.width)/2,(i-(s.height+1))/2);var r=5*e,l=5*i;this.canvas.style.width=r+"px",this.canvas.style.width=l+"px",this.canvas.style.left=n-.5*r+"px",this.canvas.style.top=a-(l+15)+"px"}}},a.STATUS_CHANGE="onStatusChange",a.prototype=Object.assign(Object.create(AnkaPanAPI.Base.prototype),{constructor:a,isDrawing:!1,pointcount:NaN,startDrawing:function(t){var e=this;if(e.isDrawing)console.warn("Çizim bitirilmeden, yeni çizim başlatılamaz.");else{for(var i=e.baseObject.getPlugins(),n=0;n<i.length;n++)i[n]instanceof AnkaScalable.ScalablePlugin?this.scalable=i[n]:i[n]instanceof AnkaSoftText.SoftTextPlugin&&(this.softText=i[n]);this.scalable||console.log("Scalable Plugin bulunamadı. Çizim sahne üzerinde gösterilemeyebilir."),this.softText||console.log("SoftTextPlugin bulunamadı. label sahne üzerinde gösterilemeyebilir."),this.scalable&&this.scalable.disableMouse(),e.isDrawing=!0,e.pointcount=t,this.counter=0;var o=e.baseObject.getGroundMaster();o.disableNavigation();var s=AnkaPanAPI.GroundMaster;o.addEvent(s.GROUND_CLICK,this,this.onGroundClick),o.addEvent(s.GROUND_MOVE,this,this.groundMove),o.addEvent(s.GROUND_MOUSE_LEFT,this,this.onGroundLeave),e.baseObject.addEvent(AnkaPanAPI.PanoGL.CONTEXT_CLICK,this,this.contextClick),e.baseObject.addEvent(AnkaPanAPI.PanoGL.RENDER_DOM_CLICK,this,this.domClick),AnkaPanAPI.CursorManager.setCursor("crosshair",666),e.baseObject.disableGroundNav(!0),this.keyDownFunction=void 0===this.keyDownFunction?this.onKeydown.bind(this):this.keyDownFunction,this.keyUpFunction=void 0===this.keyUpFunction?this.onKeyup.bind(this):this.keyUpFunction,this.mouseMoveFunction=void 0===this.mouseMoveFunction?this.onMouseMove.bind(this):this.mouseMoveFunction,this.mouseDownFunction=void 0===this.mouseDownFunction?this.onMouseDown.bind(this):this.mouseDownFunction,document.addEventListener("keydown",this.keyDownFunction),document.addEventListener("keyup",this.keyUpFunction),this.baseObject.contentDV.addEventListener("mousemove",this.mouseMoveFunction),this.baseObject.contentDV.addEventListener("mousedown",this.mouseDownFunction),this.baseObject.contentDV.addEventListener("mousedown",this.onMouseDownForMiddleClick),this.throwEvent({type:a.STATUS_CHANGE,status:"STARTED"})}},onMouseDownForMiddleClick:function(t){1===t.button&&this.counter>0&&(this.throwEvent({type:a.STATUS_CHANGE,status:"LAST_POINT_REMOVED"}),this.downPointCount())},onGroundClick:function(t){},onMouseDown:function(t){},domClick:function(t){},stopDrawing:function(t){this.isDrawing?this.throwEvent({type:a.STATUS_CHANGE,status:"FINISHED",isSuccessful:t}):console.warn("Çizim hiç başlatılmamış.")},endDraw:function(){var t=this;this.scalable&&this.scalable.enableMouse(),this.counter=0,t.isDrawing=!1,t.pointcount=NaN;var e=t.baseObject.getGroundMaster(),i=AnkaPanAPI.GroundMaster;e.removeEvent(i.GROUND_CLICK,this.onGroundClick),e.removeEvent(i.GROUND_MOVE,this.groundMove),e.removeEvent(i.GROUND_MOUSE_LEFT,this.onGroundLeave),t.baseObject.removeEvent(AnkaPanAPI.PanoGL.CONTEXT_CLICK,this.contextClick),t.baseObject.removeEvent(AnkaPanAPI.PanoGL.RENDER_DOM_CLICK,this.domClick),document.removeEventListener("keydown",this.keyDownFunction),document.removeEventListener("keyup",this.keyUpFunction),this.baseObject.contentDV.removeEventListener("mousemove",this.mouseMoveFunction),this.baseObject.contentDV.removeEventListener("mousedown",this.mouseDownFunction),this.baseObject.contentDV.removeEventListener("mousedown",this.onMouseDownForMiddleClick),this.magnifier&&this.magnifier.dispose(),this.magnifierAllowed=!1,t.throwEvent({type:D.DRAW_ENDED}),AnkaPanAPI.CursorManager.setCursor("auto",666,!0),this.baseObject.setDirty(),e.enableNavigation(),t.baseObject.disableGroundNav(!1)},raisePointCount:function(){this.counter++},downPointCount:function(){this.counter++},contextClick:function(t){},disableClick:function(){this.clickDisabled=!0},enableClick:function(){this.clickDisabled=!1},onGroundLeave:function(t){this.mouseOnGround=!1,AnkaPanAPI.CursorManager.setCursor("not-allowed",666),this.magnifierAllowed&&this.magnifier&&this.magnifier.hide()},onMouseMove:function(t){t&&(this.currenX=t.offsetX,this.currenY=t.offsetY),this.showMagnifier(this.currenX,this.currenY)},showMagnifier:function(t,e){this.magnifierAllowed&&this.magnifier.renderImage(this.baseObject,t,e)},groundMove:function(t){AnkaPanAPI.PanoGL.isPointerOnClickableObject?AnkaPanAPI.CursorManager.setCursor("auto",-1,!0):(this.mouseOnGround=!0,this.magnifierAllowed&&this.magnifier&&!this.magnifier.visible&&this.magnifier.show(),this.clickDisabled?AnkaPanAPI.CursorManager.setCursor("not-allowed",666):AnkaPanAPI.CursorManager.setCursor("crosshair",666))},onKeydown:function(t){16===t.keyCode?(this.magnifier||(this.magnifier=new n(this.baseObject.contentDV)),this.magnifierAllowed=!0,this.mouseOnGround&&(this.magnifier.show(),this.onMouseMove())):27===t.keyCode&&this.stopDrawing(!1)},onKeyup:function(t){16===t.keyCode&&(this.magnifier&&this.magnifier.hide(),this.magnifierAllowed=!1)}});var o={Polygon:"Polygon",HLine:"HLine",Line:"Line",Point:"Point",RoadLine:"RoadLine"};function s(t,e){this.drawPlugin=e,a.apply(this,arguments),this.type=o.Point}function r(t,e,i,n){return{type:a.STATUS_CHANGE,status:"POINT_MOVING",lon:t,lat:e,alt:i,feature:n,target:n}}function l(){a.apply(this,arguments),this.type=o.Polygon}function h(){a.apply(this,arguments),this.type=o.Line}function c(){a.apply(this,arguments),this.type=o.Line}function u(){a.apply(this,arguments),this.type=o.HLine}function p(t,e,i){this.drawingPlugin=t,this.panogl=t.baseObject,this.scene=e,this.camera=i;var n=new THREE.PlaneBufferGeometry(5,5,1,1);if(!p.__AnchorMaterial){var a=new THREE.TextureLoader;p.__AnchorMaterial=a.load("img/draw/drag_anchor.png",(function(){AnkaPanAPI.PanoGL.waitingForGlobalRender=!0}))}var o=new THREE.MeshBasicMaterial({transparent:!0,map:p.__AnchorMaterial,depthTest:!0,depthWrite:!0});if(AnkaScalable.EventMesh.apply(this,[n,o]),this.userData.clickPriority=1e3,!p.__AnchorUp){var s=new THREE.BoxBufferGeometry(1,10,1,1,1,1),r=new THREE.Mesh(s,new THREE.MeshBasicMaterial({color:16776960}));r.position.y=7.5;var l=new THREE.ConeBufferGeometry(3,10,15),h=new AnkaScalable.EventMesh(l,new THREE.MeshBasicMaterial({color:65280}));r.add(h),h.position.y=7.5,p.__AnchorUp=r,p.__AnchorConeUp=h}this.setClickable(!0,this.panogl,e,i),this.panogl.addEvent(AnkaPanAPI.PanoGL.VIEW_ANGLE_CHANGE,this,this.updateScale)}function d(t,e){if(AnkaScalable.SGeom.apply(this,arguments),this.points=[],this.type=o.Line,!d.__gridTexture){var i=new THREE.TextureLoader,n=i.load("img/draw/grid.png");n.wrapS=THREE.RepeatWrapping,n.wrapT=THREE.RepeatWrapping,d.__gridTexture=n}this.gridTexture=d.__gridTexture,this.canDraw=!0,this.scalable=t,this.softText=t.softText,this.opacity=.7,this._lineColor=new THREE.Color(1,0,1),this.material=new THREE.LineBasicMaterial({color:this._lineColor,linewidth:1,depthTest:!0,transparent:!0,depthWrite:!1});var a=100;this.createLine(a)}function g(t,e){if(AnkaScalable.SGeom.apply(this,arguments),this.type=o.RoadLine,this.points=[],this.scalable=t,this.softText=t.softText,this.neighbourSize=0,!AnkaScalable.SHLine.__hookTexture){var i=AnkaPanAPI.AssetManager.getInstance().GetAssetNoCache("img/scalable/hook.jpg");i.generateMipmaps=!1,i.minFilter=THREE.LinearFilter,AnkaScalable.SHLine.__hookTexture=i}if(!AnkaScalable.SHLine.__hookGeom){var n=new THREE.Geometry,a=new THREE.Vector3;n.vertices.push(a),AnkaScalable.SHLine.__hookGeom=n}this._lineColor=new THREE.Color(1,0,1);var s=new THREE.LineBasicMaterial({color:this._lineColor,linewidth:1,depthTest:!0,transparent:!0,depthWrite:!1});this.hookGeom=AnkaScalable.SHLine.__hookGeom;var r=new THREE.PointsMaterial({size:8,sizeAttenuation:!1,map:AnkaScalable.SHLine.__hookTexture,depthTest:!0,color:65280,transparent:!1});this.hookMaterial=r,this.bottomHook=new THREE.Points(this.hookGeom,this.hookMaterial),this.add(this.bottomHook);var l=3;this.range=l;var h=new THREE.BufferGeometry,c=new Float32Array(3*l);h.addAttribute("position",new THREE.BufferAttribute(c,3)),this.line=new AnkaScalable.EventLine(h,s),this.line.frustumCulled=!1,this.add(this.line),this.labelHook=new THREE.Object3D,this._raycasterForMouse=new THREE.Raycaster,this._mousePos=new THREE.Vector3}function y(){a.apply(this,arguments),this.type=o.RoadLine}function m(){a.apply(this,arguments),this.type=o.Line}function D(t){if(AnkaPanAPI.PanoPlugin.apply(this,[]),D._instances.push(this),this.currentState=D.STATES.NONE,this._roll=0,this._heading=0,this._pitch=0,this.__anchorVertex=[],D.instanceCounter++,this.iin=D.instanceCounter,this._drawingStarted=!1,this.ClassInstance=D,this.initialOptions=t,t)for(var e in t)this["_"+e]=t[e]}s.prototype=Object.assign(Object.create(a.prototype),{constructor:s,startDrawing:function(){a.prototype.startDrawing.apply(this,[1])},onGroundClick:function(t){this.clickDisabled||(this.counter++,this.scalable&&this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt}),this.pointcount>0&&this.counter>=this.pointcount&&this.stopDrawing(!0))},contextClick:function(t){this.stopDrawing(!1)}}),l.prototype=Object.assign(Object.create(a.prototype),{constructor:l,startDrawing:function(){a.prototype.startDrawing.apply(this,[-1])},stopDrawing:function(){a.prototype.stopDrawing.apply(this,arguments)},stopPolygonDrawingSlience:function(t){a.prototype.stopDrawingSlience.apply(this,arguments),this.scalable.stopSketchDrawing(t)},groundMove:function(t){a.prototype.groundMove.apply(this,arguments),this.scalable.activeGeom.canDraw?this.enableClick():this.disableClick(),this.throwEvent(r(t.lon,t.lat,t.alt,this.scalable.activeGeom))},contextClick:function(t){this.stopDrawing(this.scalable.activeGeom.points.length>=3)},onGroundLeave:function(){a.prototype.onGroundLeave.apply(this,arguments)},onGroundClick:function(t){this.clickDisabled||(this.raisePointCount(),this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt,target:this.scalable.activeGeom}))}}),h.prototype=Object.assign(Object.create(a.prototype),{constructor:h,startDrawing:function(){a.prototype.startDrawing.apply(this,[-1])},stopDrawing:function(){a.prototype.stopDrawing.apply(this,arguments),this.drawingMesh=null},groundMove:function(t){a.prototype.groundMove.apply(this,arguments),this.scalable.activeGeom.canDraw?this.enableClick():this.disableClick(),this.throwEvent(r(t.lon,t.lat,t.alt))},contextClick:function(t){this.stopDrawing(this.scalable.activeGeom.points.length>=2)},onGroundLeave:function(){a.prototype.onGroundLeave.apply(this,arguments)},onGroundClick:function(t){this.clickDisabled||(this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt}),this.raisePointCount(),this.pointcount>-1&&this.counter>=this.pointcount&&this.stopDrawing(!0))}}),c.prototype=Object.assign(Object.create(a.prototype),{constructor:c,startDrawing:function(){a.prototype.startDrawing.apply(this,[2])},stopDrawing:function(){a.prototype.stopDrawing.apply(this,arguments),this.drawingMesh=null},onMouseDownForMiddleClick:function(t){},groundMove:function(t){a.prototype.groundMove.apply(this,arguments),this.scalable.activeGeom.canDraw?this.enableClick():this.disableClick(),this.throwEvent(r(t.lon,t.lat,t.alt,this.scalable.activeGeom))},contextClick:function(t){this.stopDrawing(this.scalable.activeGeom.points.length>=2)},onGroundLeave:function(){a.prototype.onGroundLeave.apply(this,arguments)},onGroundClick:function(t){this.clickDisabled||(this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt}),this.raisePointCount(),this.pointcount>-1&&this.counter>=this.pointcount&&this.stopDrawing(!0))}}),u.prototype=Object.assign(Object.create(a.prototype),{constructor:u,startDrawing:function(){this._mousePos=new THREE.Vector3,this._raycasterForMouse=new THREE.Raycaster,a.prototype.startDrawing.apply(this,[2])},stopDrawing:function(){a.prototype.stopDrawing.apply(this,arguments)},groundMove:function(t){},onMouseDownForMiddleClick:function(t){},getRayDirection:function(){var t=this.baseObject.getMainCamera(),e=this.baseObject.globalMouseOffsetX,i=this.baseObject.globalMouseOffsetY,n=this.baseObject.getRendererDom();return this._mousePos.x=e/n.width*2-1,this._mousePos.y=-i/n.height*2+1,this._raycasterForMouse.setFromCamera(this._mousePos,t),this._raycasterForMouse.ray.direction},onMouseMove:function(t){if(a.prototype.groundMove.apply(this,arguments),this._isMouseDown){var e=Math.abs(this.mouseDownX-t.offsetX),i=Math.abs(this.mouseDownY-t.offsetY);(e>2||i>2)&&(this.isMoved=!0)}t&&this.showMagnifier(t.offsetX,t.offsetY),this.scalable.activeGeom.canDraw?this.enableClick():this.disableClick();var n=this.baseObject.getDrawingPlugin(),o=n.getCurrentGeometry(),s=this.getRayDirection(),r=s.y;if(o.points.length){var l=o.points[0],h=this.scalable.calculatePointPositionFromLonLatAlt(l.lon,l.lat,l.alt);this.distanceInPixel=Math.sqrt(h.x*h.x+0+h.z*h.z);var c=Math.asin(r),u=Math.tan(c),p=this.distanceInPixel*u,d=(p+=-h.y)/this.scalable.camHegInPix*this.scalable.camHegInMet;this.lastPosition={lat:l.lat,lon:l.lon,alt:l.alt+d},this.throwEvent({type:a.STATUS_CHANGE,status:"MOUSE_MOVING",lat:l.lat,lon:l.lon,alt:l.alt+d})}else this.throwEvent({type:a.STATUS_CHANGE,status:"MOUSE_MOVING"})},contextClick:function(t){this.stopDrawing(1===this.counter)},onGroundLeave:function(){},onGroundClick:function(t){this.clickDisabled||this.counter<=1&&(this.raisePointCount(),this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt}))},onMouseDown:function(t){this.mouseDownX=t.offsetX,this.mouseDownY=t.offsetY,this.isMoved=!1,this._isMouseDown=!0},domClick:function(t){this._isMouseDown=!1,AnkaPanAPI.PanoGL.isPointerOnClickableObject||this.isMoved||1===this.counter&&(this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:this.lastPosition.lon,lat:this.lastPosition.lat,alt:this.lastPosition.alt}),this.stopDrawing(!0))}}),p.UPDATE="update",p.prototype=Object.assign(Object.create(AnkaScalable.EventMesh.prototype),{constructor:p,setSelection:function(t){this.__isSelected!==t&&(p.__AnchorConeUp.setClickable(!1),p.__AnchorConeUp.hasEvent(AnkaPanAPI.MeshMousePicker.MOUSE_DOWN)&&p.__AnchorConeUp.removeEvent(AnkaPanAPI.MeshMousePicker.MOUSE_DOWN,this._mouseDownOnAnchorUp),t?(this.add(p.__AnchorUp),p.__AnchorConeUp.setClickable(!0,this.panogl,this.scene,this.camera),p.__AnchorConeUp.addEvent(AnkaPanAPI.MeshMousePicker.MOUSE_DOWN,this,this._mouseDownOnAnchorUp)):this.remove(p.__AnchorUp),this.__isSelected=t)},_mouseDownOnAnchorUp:function(t){this.___groundPositionY=this.position.y,this.__onAnchorMouseYPos=this._getAnchorPos(),this.drawingPlugin.stopDragController(!0),this.___releaseAnchorFNC=this.mouseUpOnDocument.bind(this),document.addEventListener("mouseup",this.___releaseAnchorFNC),this.panogl.addEvent(AnkaPanAPI.PanoGL.PRE_RENDER,this,this.onMoveOnY)},startDrag:function(){this.___groundPositionY=this.position.y,this.__mouseDownPos=this._getPositionOnGround(),this.panogl.addEvent(AnkaPanAPI.PanoGL.PRE_RENDER,this,this.onMoveOnXZ)},mouseUpOnDocument:function(t){this.drawingPlugin.stopDragController(!1),document.removeEventListener("mouseup",this.___releaseAnchorFNC),this.panogl.removeEvent(AnkaPanAPI.PanoGL.PRE_RENDER,this.onMoveOnXZ),this.panogl.removeEvent(AnkaPanAPI.PanoGL.PRE_RENDER,this.onMoveOnY)},setPoint:function(t,e,i){if(this.tempMesh=e,this.geomHolder=i,this.point=t,void 0===this.point.alt||null==this.point.alt&isNaN(this.point.alt)){var n=this.panogl.getCurrentPoint();this.point.alt=n.altitude}},stopDrag:function(){this.panogl.removeEvent(AnkaPanAPI.PanoGL.PRE_RENDER,this.onMoveOnXZ)},_getAnchorPos:function(){var t=this.__getRayDirection().y,e=new THREE.Vector3;e.setFromMatrixPosition(this.matrixWorld);var i=Math.sqrt(e.x*e.x+0+e.z*e.z),n=Math.asin(t);return i*Math.tan(n)},__getRay:function(){var t=this.panogl,e=this.camera,i=t.getRendererDom(),n=new THREE.Vector3,a=new THREE.Raycaster;return n.x=t.globalMouseOffsetX/i.clientWidth*2-1,n.y=-t.globalMouseOffsetY/i.clientHeight*2+1,a.setFromCamera(n,e),a},__getRayDirection:function(){return this.__getRay().ray.direction},_getPositionOnGround:function(){var t=this.camera,e=new THREE.Vector3(0,-this.___groundPositionY,0),i=new THREE.Vector3(0,1,0),n=this.__getRay(),a=-(i.dot(t.position)-i.dot(e))/i.dot(n.ray.direction),o=new THREE.Vector3;return o.x=t.position.x-n.ray.direction.x*a,o.y=-e.y,o.z=t.position.z-n.ray.direction.z*a,o},updateScale:function(){var t=Math.sqrt(this.position.x*this.position.x+this.position.z*this.position.z+this.position.y*this.position.y),e=this.camera.fov*Math.PI/180,i=2*Math.tan(e/2)*t/120;this.scale.set(i,i,i)},onMoveOnY:function(t){var e=this._getAnchorPos(),i=e-this.__onAnchorMouseYPos;this.position.y+=i,this.__onAnchorMouseYPos=e;var n=this.panogl.getCameraHeight(),a=this.panogl.getGroundPos(),o=this.position.y/a*n,s=0,r=this.panogl.getCurrentPoint();r&&(s=r.altitude+o),this.point.alt=s,this.lookAtCamera(),this.updateTempGeometry()},onMoveOnXZ:function(t){var e=this._getPositionOnGround(),i=new THREE.Vector3;i.subVectors(e,this.__mouseDownPos),this.position.add(i),e&&(this.position.set(e.x,e.y,e.z),this.__mouseDownPos=e);var n=this.panogl.getGroundMaster().posToLoc(this.position),a=n.lat-this.point.lat,o=n.lon-this.point.lon;this.point.lat+=a,this.point.lon+=o,this.lookAtCamera(),this.updateTempGeometry()},updateTempGeometry:function(){this.geomHolder.notifyPointChange(),this.updateScale(),this.throwEvent({type:p.UPDATE})},lookAtCamera:function(){this.rotation.y=Math.atan2(this.position.x,this.position.z)+Math.PI},updatePosition:function(){var t=this.drawingPlugin.scalable,e=this.point,i=t.calculatePointPositionFromLonLatAlt(e.lon,e.lat,e.alt);this.position.set(i.x,i.y,i.z),this.lookAtCamera(),this.updateScale()},destroy:function(){this.panogl.removeEvent(AnkaPanAPI.PanoGL.VIEW_ANGLE_CHANGE,this.updateScale),this.parent&&this.parent.remove(this),this.geometry.dispose(),this.material.dispose(),this.setClickable(!1);var t=p.__AnchorConeUp;t&&t.setClickable(!1)}}),d.isMultiGeom=!1,d.prototype=Object.assign(Object.create(AnkaScalable.SGeom.prototype),{constructor:d,reset:function(){},createLine:function(t){this.line&&(this.line.geometry.dispose(),this.line.parent&&this.line.parent.remove(this.line),this.enabled&&this.line.setClickable(!1));var e=new THREE.BufferGeometry,i=new Float32Array(3*t);e.addAttribute("position",new THREE.BufferAttribute(i,3)),this.line=new THREE.Line(e,this.material),this.line.name="SGridWallLine",this.line.frustumCulled=!1,this.add(this.line),this.enabled&&(this.enabled=!1,this.enable(this.panogl))},enable:function(t){this.enabled||(this.openGeom=!0,this.panogl=t,this.canDraw=!0,this.enabled=!0)},stopDraw:function(){this.openGeom=!1,this.dynamicPoint=null,this.line.frustumCulled=!1;for(var t=this.line.geometry.attributes.position.array,e=-1,i=0;i<t.length;i++)isNaN(t[i])&&(t[i]=0,e=i);e>-1&&this.line.geometry.setDrawRange(0,Math.ceil(e/3)),this.line.geometry.computeBoundingSphere(),this.setLabel()},setLabel:function(){},setDynamicPoint:function(t){this.points.length>0&&(this.dynamicPoint={lon:t.lon,lat:t.lat,alt:t.alt})},setPoints:function(t){this.points=t.concat()},setData:function(t,e){this.attributes=e,this.points.length=0;for(var i=0;i<t.length;i++)this.points.push(t[i])},addPoint:function(t,e,i){this.points.push({lon:t,lat:e,alt:i})},updateStyle:function(){if(this.__layer){var t=this.__layer.getStyle();this.line.material.color=new THREE.Color(t.lineColor),this.line.material.opacity=t.lineOpacity}},update:function(){var t=this.points,e=t.length,i=this.line.geometry,n=i.attributes.position.array;this.dynamicPoint&&e++,n.length/3!==e&&(this.createLine(e),n=(i=this.line.geometry).attributes.position.array);for(var a=[],o=0,s=null,r=0;r<t.length;r++){var l=t[r],h=this.scalable.calculatePointPositionFromLonLatAlt(l.lon,l.lat,l.alt);0===r&&(s=h);var c=h.x,u=h.y,p=h.z;n[o++]=c,n[o++]=u,n[o++]=p,a.push({x:c,z:p,y:u,lon:l.lon,lat:l.lat,alt:l.alt})}if(s){if(this.dynamicPoint){var d=this.dynamicPoint,g=this.scalable.calculatePointPositionFromLonLatAlt(d.lon,d.lat,d.alt),y=3*t.length,m=g.x,D=g.y,A=g.z;n[y++]=m,n[y++]=D,n[y++]=A,a.push({x:m,z:A,y:D}),i.setDrawRange(0,t.length+1)}else i.setDrawRange(0,t.length);if(this.position.set(0,0,0),i.attributes.position.needsUpdate=!0,this.grid&&(this.grid.parent.remove(this.grid),this.grid.geometry.dispose(),this.grid.material.dispose(),this.panogl.removeWall(this.grid),this.grid=null),a.length>1){var v=new AnkaScalable.WallGeometry(a),b=new THREE.MeshBasicMaterial({map:this.gridTexture,transparent:!0,opacity:1,side:THREE.DoubleSide,depthTest:!1,depthWrite:!1});this.grid=new THREE.Mesh(v,b),this.add(this.grid),this.panogl.addWall(this.grid)}}},disableAll:function(){this.parent&&this.parent.remove(this),this.enabled=!1},destroy:function(){this.disableAll(),this.line&&(this.line.geometry&&this.line.geometry.dispose(),this.line.material&&this.line.material.dispose()),this.grid&&(this.grid.parent.remove(this.grid),this.grid.geometry.dispose(),this.grid.material.dispose(),this.panogl.removeWall(this.grid),this.grid=null),this._clickMesh&&(this._clickMesh.material.dispose(),this._clickMesh.geometry.dispose())}}),g.isMultiGeom=!1,g.prototype=Object.assign(Object.create(AnkaScalable.SGeom.prototype),{constructor:g,enable:function(t){if(!this.enabled){this.openGeom=!0,this.panogl=t;var e=t.getMainCamera();this.canDraw=!0,this.line.setClickable(!0,this.panogl,null,e),this.line.addEvent(AnkaScalable.SGeom.CLICK,this,this.onClick),this.line.addEvent(AnkaScalable.SGeom.MOUSE_DOWN,this,this.onDown)}},stopDraw:function(){this.line.frustumCulled=!0,this.line.geometry.computeBoundingSphere(),this.update(),this.setLabel()},onClick:function(t){t.currentTarget=this,this.throwEvent(t)},onSelect:function(){this.line.material.color=new THREE.Color(0,1,1)},onDeSelect:function(){this.updateStyle()},setData:function(t,e){if(t.length>0){this.attributes=e,this.points.length=0;for(var i=0;i<t.length;i++)this.points.push(t[i]);this.bottomHook.visible=!0,this.bottomHook.position.set(0,0,0)}else this.points.length=0},getRayDirection:function(){var t=this.panogl.getMainCamera(),e=this.panogl.globalMouseOffsetX,i=this.panogl.globalMouseOffsetY,n=this.panogl.getRendererDom();return this._mousePos.x=e/n.width*2-1,this._mousePos.y=-i/n.height*2+1,this._raycasterForMouse.setFromCamera(this._mousePos,t),this._raycasterForMouse.ray.direction},setDynamicPoint:function(t){this.points[this.points.length]=t,this.update()},update:function(){for(var t=this.line.geometry.attributes.position.array,e=0,i=0;i<this.points.length;i++){var n=this.points[i],a=this.scalable.calculatePointPositionFromLonLatAlt(n.lon,n.lat,n.alt);t[e++]=a.x,t[e++]=a.y,t[e++]=a.z}if(this.points.length>2){var o=t[6]-t[3],s=t[8]-t[5],r=Math.sqrt(o*o+s*s)/2,l=Math.atan2(o,s);this.labelHook.position.set(t[3]+r*Math.sin(l),t[4],t[5]+r*Math.cos(l));var h=AnkaPanAPI.Utils.haversine(this.points[1].lat,this.points[2].lat,this.points[1].lon,this.points[2].lon);this.attributes._length=h,this.setLabel()}this.line.geometry.setDrawRange(0,this.range),this.line.geometry.attributes.position.needsUpdate=!0,this.scalable.setDirty()},updateStyle:function(){if(this.__layer){var t=this.__layer.getStyle();this.line.material.color=new THREE.Color(t.lineColor),this.line.material.opacity=t.lineOpacity}},setLabel:function(){if(this.softText.removeObject3D(this.labelHook),this.points.length>2){var t=this.panogl.getMainCamera(),e=this.getLabelText();e=Math.round(100*e)/100,this.softText.addObject3D(this.labelHook,t,e+"m"),this.add(this.labelHook)}},destroy:function(){this.line&&(this.line.material&&this.line.material.dispose(),this.line.geometry&&this.line.geometry.dispose(),this.line.setClickable(!1)),this.neighbourEdge&&(this.neighbourEdge.material.dispose(),this.oppositeEdge.material.dispose(),this.neighbourEdge.geometry.dispose(),this.oppositeEdge.geometry.dispose(),this.neighbourEdge.parent.remove(this.neighbourEdge),this.oppositeEdge.parent.remove(this.oppositeEdge)),this.labelHook&&(this.labelHook.parent&&this.labelHook.parent.remove(this.labelHook),this.softText.removeObject3D(this.labelHook)),this.parent&&this.parent.remove(this)}}),y.prototype=Object.assign(Object.create(a.prototype),{constructor:y,startDrawing:function(){this._mousePos=new THREE.Vector3,this._raycasterForMouse=new THREE.Raycaster,a.prototype.startDrawing.apply(this,[3])},stopDrawing:function(){a.prototype.stopDrawing.apply(this,arguments)},onMouseDownForMiddleClick:function(t){},groundMove:function(t){if(a.prototype.groundMove.apply(this,arguments),this.scalable.activeGeom.canDraw?this.enableClick():this.disableClick(),this.counter<2)this.throwEvent(r(t.lon,t.lat,t.alt));else{var e=this.getRightPosition(t);this.throwEvent(r(e.lon,e.lat,e.alt))}},getRightPosition:function(t){var e=this.baseObject.getDrawingPlugin().getCurrentGeometry(),i=e.points[0],n=e.points[1],a=i.lon-n.lon,o=i.lat-n.lat,s=Math.atan2(a,o),r=AnkaPanAPI.Utils.haversine(n.lat,t.lat,n.lon,t.lon);a=n.lon-t.lon,o=n.lat-t.lat;var l=Math.atan2(a,o),h=s/Math.PI*180;h<0&&(h+=360),(l=l/180*Math.PI)<0&&(l+=360),(l-=h)<0&&(l+=360),l%=360;var c=t.lon,u=t.lat,p=e.points[0].lon,d=e.points[0].lat,g=e.points[1].lon,y=90;(c-p)*(e.points[1].lat-d)-(u-d)*(g-p)>0&&(y=-90);var m=AnkaPanAPI.Utils.destinationPoint(n.lat,n.lon,r,s/Math.PI*180+y);return m.alt=n.alt,m},onMouseMove:function(t){a.prototype.onMouseMove.apply(this,arguments)},contextClick:function(t){this.stopDrawing(3===this.counter)},onGroundLeave:function(){a.prototype.onGroundLeave.apply(this,arguments)},onGroundClick:function(t){if(!this.clickDisabled)if(this.counter<2)this.raisePointCount(),this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:t.lon,lat:t.lat,alt:t.alt});else if(2===this.counter){var e=this.getRightPosition(t);this.raisePointCount(),this.throwEvent({type:a.STATUS_CHANGE,status:"POINT_ADDED",lon:e.lon,lat:e.lat,alt:e.alt}),this.stopDrawing(!0)}},onMouseDown:function(t){this.mouseDownX=t.offsetX,this.mouseDownY=t.offsetY,this.isMoved=!1,this._isMouseDown=!0},domClick:function(t){}}),m.prototype=Object.assign(Object.create(h.prototype),{constructor:m,startDrawing:function(){a.prototype.startDrawing.apply(this,[2])},onMouseDownForMiddleClick:function(t){}}),D.STATUS_CHANGE="onStatusChange",D.VERTEX_EDIT="onStatusChange",D.STATES={NONE:1,POLYGON_DRAW:2,LINE_DRAW:3,HLINE_DRAW:4,POINT_DRAW:5,ROAD_LINE_DRAW:6},D.GEOM_TYPES=o,D.prototype=Object.create(AnkaPanAPI.PanoPlugin.prototype),D.prototype.constructor=D,D._instances=[],D.instanceCounter=100,D.prototype.stopGeometryVertexEdit=function(){for(var t=0;t<this.__anchorVertex.length;t++)this.__anchorVertex[t].destroy(),this.__anchorVertex[t].removeEvent(AnkaPanAPI.MeshMousePicker.CLICK,this.onAnchorClick);D.__vertexEditGeom=null,this.__anchorVertex.length=0},D.prototype.editGeometryVertices=function(t,e){this.stopGeometryVertexEdit();var i=[];if(e.isMultiGeom)for(var n=0;n<e.points.length;n++)for(var a=0;a<e.points[n].length;a++)i.push(e.points[n][a]);else for(var o=0;o<e.points.length;o++)i.push(e.points[o]);D.__vertexEditGeom=e;for(var s=this.baseObject,r=s.getMainCamera(),l=s.getCurrentPoint(),h=s.getCameraHeight(),c=l.altitude-h,u=0;u<i.length;u++){var d=i[u],g=new p(this,this.anchorScene,r);g.setPoint(d,t,e),this.anchorScene.add(g),(isNaN(d.alt)||void 0===d.alt||null===d.alt)&&(d.alt=c);var y=this.scalable.calculatePointPositionFromLonLatAlt(d.lon,d.lat,d.alt);g.position.set(y.x,y.y,y.z),g.updateScale(),g.addEvent(AnkaPanAPI.MeshMousePicker.CLICK,this,this.onAnchorClick),this.__anchorVertex.push(g),g.lookAtCamera()}},D.prototype.onAnchorClick=function(t){var e=t.target;this.selectAnchor(e)},D.prototype.stopDragController=function(t){this.baseObject.getController().disable(t)},D.prototype.onAnchorMouseDown=function(t){var e=t.target;this.stopDragController(!0),this.selectAnchor(e),e.startDrag(),this.mouseUpFNC=this.onMouseUpForAnchor.bind(this),document.addEventListener("mouseup",this.mouseUpFNC)},D.prototype.onMouseUpForAnchor=function(t){this.__selectedAnchor.stopDrag(),this.stopDragController(!1),document.removeEventListener("mouseup",this.mouseUpFNC)},D.prototype.selectAnchor=function(t){this.clearAnchorSelection(),this.__selectedAnchor=t,this.__selectedAnchor.addEvent(AnkaPanAPI.MeshMousePicker.MOUSE_DOWN,this,this.onAnchorMouseDown),t.addEvent(p.UPDATE,this,this.anchorUpdate),t.setSelection(!0)},D.prototype.anchorUpdate=function(t){for(var e=D._instances,i=0;i<e.length;i++){e[i]!==this&&e[i].updateAnchorPositions();var n={type:D.VERTEX_EDIT,target:D.__vertexEditGeom};this.throwEventFowAll(n)}},D.prototype.updateAnchorPositions=function(t){for(var e=0;e<this.__anchorVertex.length;e++)this.__anchorVertex[e].updatePosition()},D.prototype.clearAnchorSelection=function(){this.__selectedAnchor&&(this.__selectedAnchor.setSelection(!1),this.__selectedAnchor.removeEvent(AnkaPanAPI.MeshMousePicker.MOUSE_DOWN,this.onAnchorMouseDown),this.__selectedAnchor.removeEvent(p.UPDATE,this.anchorUpdate)),this.__selectedAnchor=null},D.prototype.prepare=function(){for(var t=this.baseObject,e=t.getPlugins(),i=0;i<e.length;i++)if(e[i]instanceof AnkaScalable.ScalablePlugin){this.scalable=e[i];break}var n=this;t.getDrawingPlugin=function(){return n};for(var a=D._instances,o=0;o<a.length;o++)if(a[o]!==this&&a[o].currentState!==D.STATES.NONE){this.startSyncDrawByState(a[o].currentState);break}this.anchorScene=new THREE.Scene,this.baseObject.addEvent(AnkaPanAPI.PanoGL.POST_RENDER,this,this.onPostRender)},D.prototype.onPostRender=function(t){if(this.anchorScene&&this.anchorScene.children.length>0){var e=this.baseObject.getRenderer();e.clearDepth(),e.render(this.anchorScene,this.baseObject.getMainCamera())}},D.prototype.startSyncDrawByState=function(t){t===D.STATES.POLYGON_DRAW?(this.scalable.updateAliveGeom(),this.startSyncronPolygonDraw()):t===D.STATES.LINE_DRAW?(this.scalable.updateAliveGeom(),this.startSyncronLineDraw()):t===D.STATES.POINT_DRAW?(this.scalable.updateAliveGeom(),this.startSyncronPointDraw()):t===D.STATES.HLINE_DRAW&&(this.scalable.updateAliveGeom(),this.startSyncronHLineDraw())},D.prototype.clearDrawings=function(t){this.currentTool&&(this.scalable.destroyActiveGeometry(),this.currentTool.removeEvent(a.STATUS_CHANGE,this.drawingUpdate),this.currentState=D.STATES.NONE,this.currentTool.stopDrawing(t),this.endDraw())},D.prototype.stopDrawingForAll=function(t){for(var e=D._instances,i=0;i<e.length;i++)e[i].clearDrawings(t)},D.prototype.startHLine=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(AnkaScalable.SHLine,[],{});i.type=AnkaScalable.GeomDataHolder.HLINE,i.isDrawnData=!0,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronHLineDraw()},D.prototype.startSyncronHLineDraw=function(){this.clearDrawings(),this.currentState=D.STATES.HLINE_DRAW,this.currentTool=new u(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startGridLine=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(d,[],{});i.type=AnkaScalable.GeomDataHolder.LINE,i.isDrawnData=!0,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronGridLineDraw()},D.prototype.startSyncronGridLineDraw=function(){this.clearDrawings(),this.currentState=D.STATES.HLINE_DRAW,this.currentTool=new c(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startPoint=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(AnkaScalable.SPoint,[],{});i.isDrawnData=!0,i.type=AnkaScalable.GeomDataHolder.POINT,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronPointDraw()},D.prototype.startSyncronPointDraw=function(){this.clearDrawings(),this.currentState=D.STATES.POINT_DRAW,this.currentTool=new s(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startRoadLine=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(g,[],{});i.isDrawnData=!0,i.type=AnkaScalable.GeomDataHolder.LINE,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronRoadLineDraw()},D.prototype.startSyncronRoadLineDraw=function(){this.clearDrawings(),this.currentState=D.STATES.ROAD_LINE_DRAW,this.currentTool=new y(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startSlopeLine=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(AnkaScalable.SHLine,[],{});i.isDrawnData=!0,i.type=AnkaScalable.GeomDataHolder.LINE,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronSlopeLineDraw()},D.prototype.startSyncronSlopeLineDraw=function(){this.clearDrawings(),this.currentState=D.STATES.HLINE_DRAW,this.currentTool=new m(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startLine=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(AnkaScalable.SLine,[],{});i.isDrawnData=!0,i.type=AnkaScalable.GeomDataHolder.LINE,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer),i.mergeAttributes(e);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronLineDraw()},D.prototype.startSyncronLineDraw=function(){this.clearDrawings(),this.currentState=D.STATES.LINE_DRAW,this.currentTool=new h(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing()},D.prototype.startPolygon=function(t,e){this.clearDrawings();var i=new AnkaScalable.GeomDataHolder(AnkaScalable.SPolygon,[],e);i.type=AnkaScalable.GeomDataHolder.POLYGON,i.isDrawnData=!0,i.setStatus(AnkaScalable.GeomDataHolder.STATUS.DRAWING),AnkaScalable.ScalablePlugin.activeGeomDataHolder=i,t?i.layer=t:(this.sketchLayer=this.scalable.getMainSketchLayer(),i.layer=this.sketchLayer);for(var n=D._instances,a=0;a<n.length;a++)n[a].scalable.updateAliveGeom(),n[a].startSyncronPolygonDraw()},D.prototype.startSyncronPolygonDraw=function(){this.clearDrawings(),this.currentState=D.STATES.POLYGON_DRAW,this.currentTool=new l(this.baseObject),this.currentTool.addEvent(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool.startDrawing(),this.throwEvent({type:D.DRAW_STARTED,target:AnkaScalable.ScalablePlugin.activeGeomDataHolder,drawType:this.getGeomType()})},D.prototype.getGeomType=function(){return this.currentState===D.STATES.POLYGON_DRAW?D.GEOM_TYPES.Polygon:this.currentState===D.STATES.HLINE_DRAW?D.GEOM_TYPES.HLine:this.currentState===D.STATES.LINE_DRAW?D.GEOM_TYPES.Line:this.currentState===D.STATES.POINT_DRAW?D.GEOM_TYPES.Point:this.currentState===D.STATES.ROAD_LINE_DRAW?D.GEOM_TYPES.RoadLine:this.activeGeomType},D.prototype.drawingUpdate=function(t){var e=AnkaScalable.ScalablePlugin.activeGeomDataHolder;if(t.target=e,t.feature=e,"POINT_MOVING"===t.status)t.drawType=this.getGeomType(),e.setDynamicPoint({lat:t.lat,lon:t.lon,alt:t.alt}),this.throwEventFowAll(t);else if("LAST_POINT_REMOVED"===t.status)e.removeLastPoint(),t.drawType=this.getGeomType(),this.throwEventFowAll(t);else if("POINT_ADDED"===t.status)e.addPoint({lat:t.lat,lon:t.lon,alt:t.alt}),t.drawType=this.getGeomType(),this.throwEventFowAll(t);else if("FINISHED"===t.status){for(var i=this.getGeomType(),n=D._instances,a=0;a<n.length;a++)n[a].endDraw();if(t.isSuccessful){e.setStatus(AnkaScalable.GeomDataHolder.STATUS.COMPLETED);var o=e.layer;if(o.isSketchLayer){o.addToList(e);for(var s=o.getLayerInstances(),r=0;r<s.length;r++)s[r].drawGeometry(e)}else for(var l=o.getLayerInstances(),h=0;h<l.length;h++)l[h].addToList(e),l[h].drawGeometry(e)}else e.setStatus(AnkaScalable.GeomDataHolder.STATUS.BAD_COMPLETED);this.scalable.destroyActiveGeometryForAllInstance(),t.drawType=i,t.target=e,this.throwEventFowAll(t)}else"MOUSE_MOVING"===t.status?(e.setDynamicPoint({lat:t.lat,lon:t.lon,alt:t.alt}),e.throwEvent({type:AnkaScalable.GeomDataHolder.CHANGE,target:e}),t.drawType=this.getGeomType(),this.throwEventFowAll(t)):"STARTED"===t.status&&(t.drawType=this.getGeomType(),this.throwEventFowAll(t))},D.prototype.throwEventFowAll=function(t){for(var e=D._instances,i=0;i<e.length;i++)e[i].setDirty(),e[i].throwEvent(t)},D.prototype.endDraw=function(){this.currentState=D.STATES.NONE,AnkaScalable.ScalablePlugin.activeGeomDataHolder=null,this.currentTool.endDraw(),this.currentTool.removeEventWithContext(a.STATUS_CHANGE,this,this.drawingUpdate),this.currentTool=null},D.prototype.addPoint=function(t,e,i){var n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];if(this.currentTool&&AnkaScalable.ScalablePlugin.activeGeomDataHolder){var a=AnkaScalable.ScalablePlugin.activeGeomDataHolder;if(a.addPoint({lat:e,lon:t,alt:i}),n){var o=this.getGeomType(),s={type:D.STATUS_CHANGE,status:"POINT_ADDED",lon:t,lat:e,alt:i,isManual:!0,drawType:o,target:a};this.throwEventFowAll(s)}this.setDirty()}else console.log("DrawingPlugin is not started yet!")},D.prototype.setDynamicPoint=function(t,e,i){if(this.currentTool&&AnkaScalable.ScalablePlugin.activeGeomDataHolder){var n=AnkaScalable.ScalablePlugin.activeGeomDataHolder;n.setDynamicPoint({lat:e,lon:t,alt:i});var a=this.getGeomType(),o={type:D.STATUS_CHANGE,status:"POINT_MOVING",lon:t,lat:e,alt:i,isManual:!0,drawType:a,target:n};this.throwEventFowAll(o),this.setDirty()}else console.log("DrawingPlugin is not started yet!")},D.prototype.setGeoJSONToCurrentDraw=function(t){if(this.currentTool&&AnkaScalable.ScalablePlugin.activeGeomDataHolder)if(t){var e=t.properties,i=t.geometry,n=i.type,a=i.coordinates,o=this.layer;if("Point"===n){var s={lon:a[0],lat:a[1],alt:a[2]},r=this.getGeomType(),l=AnkaScalable.ScalablePlugin.activeGeomDataHolder;if(l.setPoints([s]),l.isDrawnData=!0,o?l.layer=o:(this.sketchLayer=this.scalable.getMainSketchLayer(),l.layer=this.sketchLayer),l.mergeAttributes(e),l.setStatus(AnkaScalable.GeomDataHolder.STATUS.COMPLETED),o.isSketchLayer){o.addToList(l);for(var h=o.getLayerInstances(),c=0;c<h.length;c++)h[c].drawGeometry(l)}else for(var u=o.getLayerInstances(),p=0;p<u.length;p++)u[p].addToList(l),u[p].drawGeometry(l);for(var d=D._instances,g=0;g<d.length;g++)d[g].endDraw();var y={type:D.STATUS_CHANGE,target:l,status:"FINISHED",isManual:!0,drawType:r,isSuccessful:!0};this.throwEventFowAll(y)}else if("LineString"===n){for(var m=[],A=0;A<a.length;A++){var v=a[A];m.push({lon:v[0],lat:v[1],alt:v[2]})}var b=this.getGeomType(),f=AnkaScalable.ScalablePlugin.activeGeomDataHolder;if(o?f.layer=o:(this.sketchLayer=this.scalable.getMainSketchLayer(),f.layer=this.sketchLayer),f.isDrawnData=!0,f.setPoints(m),f.mergeAttributes(e),f.setStatus(AnkaScalable.GeomDataHolder.STATUS.COMPLETED),o.isSketchLayer){o.addToList(f);for(var S=o.getLayerInstances(),E=0;E<S.length;E++)S[E].drawGeometry(f)}else for(var w=o.getLayerInstances(),T=0;T<w.length;T++)w[T].addToList(f),w[T].drawGeometry(f);for(var _=D._instances,P=0;P<_.length;P++)_[P].endDraw();var k={type:D.STATUS_CHANGE,target:f,status:"FINISHED",isManual:!0,drawType:b,isSuccessful:!0};this.throwEventFowAll(k)}else"Polygon"===n?console.log("Non Implemented format"):console.log("Unsupportted geometry format "+n)}else console.log("GeoJSON is not defined");else console.log("DrawingPlugin is not started yet!")},D.prototype.lineStatus=function(t){if("POINT_ADDED"===t.status)for(var e=D._instances,i=0;i<e.length;i++)e[i]!==this&&(e[i].currentTool.raisePointCount(),e[i].currentTool.scalable.addSketchPoint(t.lon,t.lat));else if("POINT_MOVING"===t.status)for(var n=D._instances,a=0;a<n.length;a++)n[a]!==this&&n[a].currentTool.scalable.updateLastSketchPosition(t.lon,t.lat,t.alt,!0);else if("FINISHED"===t.status)for(var o=D._instances,s=0;s<o.length;s++)o[s]!==this&&o[s].currentTool.stopPolygonDrawingSlience(t.isSuccessful)},D.prototype.pointStatus=function(t){if("POINT_ADDED"===t.status)for(var e=D._instances,i=0;i<e.length;i++)e[i]!==this&&e[i].currentTool.scalable.addPersistentPoint(t.lon,t.lat);else if("FINISHED"===t.status)for(var n=D._instances,a=0;a<n.length;a++)n[a]!==this&&n[a].currentTool.stopDrawingSlience(t.isSuccessful)},D.prototype.getCurrentGeometry=function(){return AnkaScalable.ScalablePlugin.activeGeomDataHolder}}})}));